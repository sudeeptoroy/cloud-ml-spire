suite: test .agent.config.filePath /etc/spire/agent.conf
templates:
  - agent-daemonset.yaml
  - agent-configmap.yaml
tests:
  - it: "agent.configFile setting changes agent config file location"
    template: agent-daemonset.yaml
    set:
      agent.configFile: "/etc/spire/agent_goofy"
      trustdomain: "dev.mycorp.com"
    asserts:
      - containsDocument:
          apiVersion: "apps/v1"
          kind: "DaemonSet"
          name: "RELEASE-NAME-agent-daemonset"
          namespace: "NAMESPACE"
      - equal:
          path: spec.template.spec.containers[?(@.name == "RELEASE-NAME-agent")].args[0]
          value: "-config"
      - equal:
          path: spec.template.spec.containers[?(@.name == "RELEASE-NAME-agent")].args[1]
          value: "/etc/spire/agent_goofy"
      - isNotNull:
          path: spec.template.spec.containers[?(@.name == "RELEASE-NAME-agent")].volumeMounts[?(@.name == "RELEASE-NAME-agent-config")]
      - equal:
          path: spec.template.spec.containers[?(@.name == "RELEASE-NAME-agent")].volumeMounts[?(@.name == "RELEASE-NAME-agent-config")].mountPath
          value: "/etc/spire/"
      - equal:
          path: spec.template.spec.containers[?(@.name == "RELEASE-NAME-agent")].volumeMounts[?(@.name == "RELEASE-NAME-agent-config")].readOnly
          value: true
      - equal:
          path: spec.template.spec.volumes[?(@.name == "RELEASE-NAME-agent-config")].configMap.name
          value: "RELEASE-NAME-agent-config"
  - it: "agent.configFile setting changes agent config map key"
    template: agent-configmap.yaml
    set:
      agent.configFile: "/etc/spire/agent_goofy"
      trustdomain: "dev.mycorp.com"
    asserts:
      - containsDocument:
          apiVersion: "v1"
          kind: "ConfigMap"
          name: "RELEASE-NAME-agent-config"
          namespace: "NAMESPACE"
      - isNotNull:
          path: data.agent_goofy
